disney <- c(11, 13, 11, 8, 12, 11, 12, 8, 10)
fox <- c(18, 15, 15, 15, 16, 17, 15, 13, 11)
# crear diferentes estructuras de datos en R
vector_titulos <- nombre
matriz_peliculas <- matrix(c(warner, disney, fox),
nrow = 9,
ncol = 3)
peliculas_df <- data.frame(nombre,
puntuacion,
posterior_2005)
#------length-----
length(diag(4))  # = 16 (4 x 4)
length(options())  # 12 or more
length(y ~ x1 + x2 + x3)  # 3
length(expression(x, {y <- x^2; y+2}, x^y))  # 3
#-----diff----
diff(1:10, 2)
diff(1:10, 2, 2)
# informacion peliculas shrek.
nombre <- c("Shrek", "Shrek 2", "Shrek Tercero", "Shrek: Felices por siempre")
puntuacion <- c(7.9, 7.2, 6.1, 6.3)
posterior_2005 <- c(FALSE, FALSE, TRUE, TRUE)
# informacion estrenos de peliculas
warner <- c(20, 20, 16, 17, 17, 22, 17, 18, 19)
disney <- c(11, 13, 11, 8, 12, 11, 12, 8, 10)
fox <- c(18, 15, 15, 15, 16, 17, 15, 13, 11)
# crear diferentes estructuras de datos en R
vector_titulos <- nombre
matriz_peliculas <- matrix(c(warner, disney, fox),
nrow = 9,
ncol = 3)
peliculas_df <- data.frame(nombre,
puntuacion,
posterior_2005)
# crear lista en R
lista_curso <- list(vector_titulos)
# crear lista en R
lista_curso <- list(vector_titulos, matriz_peliculas)
# mostrar lista
lista_curso
# cambiar nombre de dataframe
names(lista_curso) <- c('vector', 'matriz')
# mostrar lista
lista_curso
# Seleccionar vector de la lista
lista_curso[['vector']]
# Seleccionar el tercer elemento del vector de la lista
lista_curso[['vector']][3]
# Seleccionar fila 5 y columna 3 de la matriz de la lista
lista_curso[['matriz']][5,3]
# agregar dataframe a lista
lista_curso[['data_frame']] <- peliculas_df
# revisar que está el dataframe
lista_curso
# revisar que está el dataframe
lista_curso
# eliminar un elemento de lista
lista_curso[['vector']] <- NULL
# revisar que no está el vector
lista_curso
# crear vector de ventas
tallas <- c('m', 'g', 'S', 'S','m', 'M')
# intentar graficar
plot(tallas)
# crear factor de un vector
factor_tallas <- factor(tallas)
# graficar factor
plot(factor_tallas)
# crear vector de ventas
tallas <- c('m', 'g', 'S', 'S','m', 'M')
# intentar graficar
plot(tallas)
# crear factor de un vector
factor_tallas <- factor(tallas)
# graficar factor
plot(factor_tallas)
# mirar niveles de factor
levels(factor_tallas)
# creando factor recodificado
tallas_recodificado <- factor(tallas, levels=c('g','m','M','S'), labels = c('G','M','M','S'))
# graficando ventas_recodificado
plot(tallas_recodificado)
# ordenando niveles (copiar factor anterior)
tallas_recodificado <- factor(tallas, ordered=TRUE,levels=c('g','m','M','S'), labels = c('G','M','M','S'))
# viendo el orden en los niveles
levels(tallas_recodificado)
# graficando el factor ordenado
plot(tallas_recodificado)
# Cargando datos de videos anteriores
# informacion peliculas shrek.
nombre <- c("Shrek", "Shrek 2", "Shrek Tercero", "Shrek: Felices por siempre")
puntuacion <- c(7.9, 7.2, 6.1, 6.3)
posterior_2005 <- c(FALSE, FALSE, TRUE, TRUE)
# informacion estrenos de peliculas
warner <- c(20, 20, 16, 17, 17, 22, 17, 18, 19)
disney <- c(11, 13, 11, 8, 12, 11, 12, 8, 10)
fox <- c(18, 15, 15, 15, 16, 17, 15, 13, 11)
# crear diferentes estructuras de datos en R
vector_titulos <- nombre
matriz_peliculas <- matrix(c(warner, disney, fox),
nrow = 9,
ncol = 3)
peliculas_df <- data.frame(nombre,
puntuacion,
posterior_2005)
# crear lista en R
lista_curso <- list(vector_titulos, matriz_peliculas)
# mostrar lista
lista_curso
# cambiar nombre de dataframe
names(lista_curso) <- c('vector', 'matriz')
# mostrar lista
lista_curso
# Seleccionar vector de la lista
lista_curso[['vector']]
# Seleccionar el tercer elemento del vector de la lista
lista_curso[['vector']][3]
# Seleccionar fila 5 y columna 3 de la matriz de la lista
lista_curso[['matriz']][5,3]
# agregar dataframe a lista
lista_curso[['data_frame']] <- peliculas_df
# revisar que está el dataframe
lista_curso
# eliminar un elemento de lista
lista_curso[['vector']] <- NULL
# revisar que no está el vector
lista_curso
#------length-----
length(diag(4))  # = 16 (4 x 4)
length(options())  # 12 or more
length(y ~ x1 + x2 + x3)  # 3
length(expression(x, {y <- x^2; y+2}, x^y))  # 3
## from example(warpbreaks)
require(stats)
fm1 <- lm(breaks ~ wool * tension, data = warpbreaks)
length(fm1$call)      # 3, lm() and two arguments.
length(formula(fm1))  # 3, ~ lhs rhs
#-----diff----
diff(1:10, 2)
diff(1:10, 2, 2)
x <- cumsum(cumsum(1:10))
diff(x, lag = 2)
diff(x, differences = 2)
diff(.leap.seconds)
nombre <- c('Luis', 'Jorge', 'Luisa')
nota <- c(60,30,85)
estado <- c('A', 'R', 'R')
nombre <- c('Luis', 'Jorge', 'Luisa')
nota <- c(60,30,85)
estado <- c('A', 'R', 'R')
data.frame(nombre, nota, estado)
df <- data.frame(nombre, nota, estado)
estado <- c(TRUE FALSE, TRUE)
df <- data.frame(nombre, nota, estado)
df
estado <- c(TRUE FALSE, TRUE)
estado <- c(TRUE, FALSE, TRUE)
df <- data.frame(nombre, nota, estado)
df
names(df) <- ('NOMBRE', 'NOTA', 'ESTADO')
names(df) <- C('NOMBRE', 'NOTA', 'ESTADO')
names(df) <- c('NOMBRE', 'NOTA', 'ESTADO')
df
a <-
;
df
nombre <- c('Luis', 'Jorge', 'Luisa', 'Pedro')
nota <- c(60,30,85,45)
estado <- c(TRUE, FALSE, TRUE, FALSE)
df <- data.frame(nombre, nota, estado)
df
names(df) <- c('NOMBRE', 'NOTA', 'ESTADO')
df
df
df[['NOMBRE']][3]
df[['NOMBRE']][3,2]
df[['NOMBRE']][3]
nombre <- c('Luis', 'Jorge', 'Miguel', 'Pedro')
nota <- c(60,30,85,45)
estado <- c(TRUE, FALSE, TRUE, FALSE)
df <- data.frame(nombre, nota, estado)
df
names(df) <- c('NOMBRE', 'NOTA', 'ESTADO')
df
df[['NOMBRE']][3]
df[['NOMBRE']][3,3]
df[['NOMBRE']][3]
df[['NOTA']][3]
df[c(1,1),c()]
df[c(1,1),c(2,2)]
df[c(1,2),c(2,2)]
df[c(3,2),c(1,2)]
df[1,]
df[,'NOTA']
df[2,]
df[,'NOTA']
df$NOTA
df$ESTADO
#TAREA PARA MIERCOLES  ORDENAR LOS DATAFRAMES Y COMO SE TRABAJA CON ATTACH Y DETACH.
df <- (x1 = c(9,8,3,4,8),
x2 = c(5,4,7,1,1),
x3 = c(1,2,3,4,5))
#TAREA PARA MIERCOLES  ORDENAR LOS DATAFRAMES Y COMO SE TRABAJA CON ATTACH Y DETACH.
df <- (x1 = c(9,8,3,4,8)
x2 = c(5,4,7,1,1)
x3 = c(1,2,3,4,5))
#TAREA PARA MIERCOLES  ORDENAR LOS DATAFRAMES Y COMO SE TRABAJA CON ATTACH Y DETACH.
df<-data.frame(x1 = c(9, 8, 3, 4, 8),         # Create example data
x2 = c(5, 4, 7, 1, 1),
x3 = c(1, 2, 3, 4, 5))
#TAREA PARA MIERCOLES  ORDENAR LOS DATAFRAMES Y COMO SE TRABAJA CON ATTACH Y DETACH.
df<-data.frame(x1 = c(9, 8, 3, 4, 8),         # Create example data
x2 = c(5, 4, 7, 1, 1),
x3 = c(1, 2, 3, 4, 5))
#TAREA PARA MIERCOLES  ORDENAR LOS DATAFRAMES Y COMO SE TRABAJA CON ATTACH Y DETACH.
df<-data.frame(x1 = c(9, 8, 3, 4, 8),         # Create example data
x2 = c(5, 4, 7, 1, 1),
x3 = c(1, 2, 3, 4, 5))
;
#TAREA PARA MIERCOLES  ORDENAR LOS DATAFRAMES Y COMO SE TRABAJA CON ATTACH Y DETACH.
df<-data.frame(x1 = c(9, 8, 3, 4, 8),         # Create example data
x2 = c(5, 4, 7, 1, 1),
x3 = c(1, 2, 3, 4, 5))
df
x1
attach(df)
x1
x2
x3
detach(df)
x1
#TAREA PARA MIERCOLES  ORDENAR LOS DATAFRAMES Y COMO SE TRABAJA CON ATTACH Y DETACH.
df<-data.frame(x1 = c(9, 8, 3, 4, 8),         # Create example data
x2 = c(5, 4, 7, 1, 1),
x3 = c(1, 2, 3, 4, 5))
df
x1
attach(df)
x1
x2
x3
detach(df)
x1
genere <- c(1,1,1,1,1, 2,2,2,2,2)
df <- data.frame(cbind(sexo, notas))
df
plot(df)
plot(df, main='Grafico 1')
genere <- c(1,1,1,1,1, 2,2,2,2,2)
notas <- c(3,7,6,4,8,0,5,2,0,4)
df <- data.frame(cbind(sexo, notas))
df
plot(df, main='Grafico 1')
plot(df, main='Miguel')
plot(df, main='Miguel', sub('Notas de clase'))
plot(df, main='Miguel', sub='Notas de clase')
plot(df, main='Miguel', sub='Notas de clase')
plot(df, main='Miguel', sub='Notas de clase')
plot(df, main='Miguel', sub='Notas de clase')
plot(df, main='Miguel', sub='Notas de clase')
plot(df, main='Miguel', sub='Notas de clase')
plot(df, main='Miguel', sub='Notas de clase')
plot(df, main='Miguel', sub='Notas de clase')
plot(df, main='Miguel', sub='Notas de clase')
plot(df, main='Miguel', sub='Notas de clase', xlab='genero', ylab='notas')
plot(df, main='Miguel', sub='Notas de clase', xlab='genero')
genere <- c(1,1,1,1,1, 2,2,2,2,2)
notas <- c(3,7,6,4,8,0,5,2,0,4)
df <- data.frame(cbind(sexo, notas))
df
plot(df, main='Miguel', sub='Notas de clase', xlab='genero')
plot(x, sin(x),
main="The Sine Function",
ylab="sin(x)")
plot(df, main="Miguel", sub="Notas de clase", xlab="genero")
plot(x, sin(x),main="The Sine Function",
ylab="sin(x)")
plot(x, sin(x),main="The Sine Function",ylab="sin(x)")
plot(df, main="Miguel", sub="Notas de clase", xlab="genero")
plot(df, main="Miguel", sub="Notas de clase", xlab="genero")
plot(df, main="Miguel", sub="Notas de clase", xlab="genere")
plot(df, main="Miguel", sub="Notas de clase", xlab="genere", ylab="notas")
df <- data.frame(cbind(genere, notas))
df
plot(df, main="Miguel", sub="Notas de clase", xlab="genere", ylab="notas")
genere <- c(1,1,1,1,1, 2,2,2,2,2)
notas <- c(3,7,6,4,8,0,5,2,0,4)
df <- data.frame(cbind(genere, notas))
df
plot(df, main="Miguel", sub="Notas de clase", xlab="genere", ylab="notas")
plot(df, main="Miguel", sub="Notas de clase", xlab="sexo", ylab="notas", ylim=c(0,10))
plot(df, main="Miguel", sub="Notas de clase", xlab="sexo", ylab="notas", ylim=c(0,10))
plot(df, main="Miguel", sub="Notas de clase", xlab="sexo", ylab="notas", ylim=c(0,10), col=blue)
plot(df, main="Miguel", sub="Notas de clase", xlab="sexo", ylab="notas", ylim=c(0,10), col="blue")
plot(df, main="Miguel", sub="Notas de clase",
xlab="sexo", ylab="notas", ylim=c(0,10), col="blue", colmain='green')
plot(df, main="Miguel", sub="Notas de clase",
xlab="sexo", ylab="notas", ylim=c(0,10), col="blue", col.main='green')
plot(df, main="Miguel", sub="Notas de clase",
xlab="sexo", ylab="notas", ylim=c(0,10),
col="blue", col.main='green')
plot(df, main="Miguel", sub="Notas de clase",
xlab="sexo", ylab="notas", ylim=c(0,10),
col="blue", col.main='green')
plot(df, main="Miguel", sub="Notas de clase",
xlab="sexo", ylab="notas", ylim=c(0,10),
col="blue", col.main='green', col.sub='red')
notas <- c(3,7,6,4,10,0,5,2,0,4)
df <- data.frame(cbind(genere, notas))
df
plot(df, main="Miguel", sub="Notas de clase",
xlab="sexo", ylab="notas", ylim=c(0,10),
col="blue", col.main='green', col.sub='red')
plot(df, main="Miguel", sub="Notas de clase",
xlab="sexo", ylab="notas", ylim=c(0,15),
col="blue", col.main='green', col.sub='red')
plot(df, main="Miguel", sub="Notas de clase",
xlab="sexo", ylab="notas", ylim=c(0,10),
col="blue", col.main='green', col.sub='red')
plot(df, main="Miguel", sub="Notas de clase",
xlab="sexo", ylab="notas", ylim=c(0,10),
col="blue", col.main='green', col.sub='red', col.lab='cian')
plot(df, main="Miguel", sub="Notas de clase",
xlab="sexo", ylab="notas", ylim=c(0,10),
col="blue", col.main='green', col.sub='red', col.lab='cyan')
seq(3)
seq(39)
seq(1:39)
seq(3
:39)
seq(3:39)
seq(3,39)
seq(10,39)
1:3
rep(1:3)
rep(1:3,3)
rep(1:3,4)
setwd("~/Documentos/Desarrollo/simulacion")
#B)
seq(from =1, to=100, length.out = 7)
#B)
seq(from =1, to=10, length.out = 7)
#B)
seq(from =1, to=10, length.out = 10)
#B)
seq(from =10, to=10, length.out = 10)
#B)
seq(from =10, to=10, length.out = 20)
help('seq')
#B)
seq(from =10, to=10.5, length.out = 10)
#B)
seq(from =10, to=10.5, length.out = 10)
#C)
rep('a',3)
str()
str(3)
#C)
rep(srt(1:3),3)
str(3)
#C)
rep(str(1:3),3)
str(1:3)
typeof(str(1:3))
typeof(str(1:3))
typeof(str(1:3))
toString(1:3)
typeof(toString(1:3))
#C)
rep(c('1','2','3', 'banana'),3)
#C)
rep(c('1','2','3', 'banana'),2)
#ejercicio 2
nombre <- c('Luis', 'Angel','Pablo','Ursula','Tatiana','Ariel')
days
women
men
ls()
rm()
ls()
rm(ls())
rm()
women
day
help('women')
acme
datasets.acme
datasets
help('datasets')
library(help = "datasets")
library(help = "datasets")
iris
AirPassengers
DNase
sleep
dias <- c('Lunes', 'Martes', 'Miercores', 'Jueves', 'Viernes', 'Sabado', 'Domingo')
h_semana <- c(3, 2.5 , 1 , 0.5, 5,10)
df <- data.frame(nombre, dias, h_semana)
dias <- c('Lunes', 'Martes', 'Miercores', 'Jueves', 'Viernes', 'Sabado')
df <- data.frame(nombre, dias, h_semana)
df
dias <- c( 'Miercores','Lunes',  'Jueves', 'Viernes', 'Sabado','Martes')
h_semana <- c(3, 2.5 , 1 , 0.5, 5,10)
df <- data.frame(nombre, dias, h_semana)
df
h_semana <- c(3, 2.5 , 1 , 0.5, 5,2)
df <- data.frame(nombre, dias, h_semana)
df
cronograma <- data.frame(nombre, dias, h_semana)
df
View(cronograma)
cronograma <- data.frame(nombre, dias, h_semana)
cronograma
View(cronograma)
names(cronograma) <-('Nombres', 'Dias','Horas a la semana')
names(cronograma) <-c('Nombres', 'Dias','Horas a la semana')
cronograma
#ejercicio 3
read.csv('/home/atencio/Escritorio/materias_dataset.csv')
df <- read_csv(file.choose(),skip = 0,col_names = TRUE)
#ejercicio 3
read.csv('/home/atencio/Escritorio/materias_dataset.csv')
#ejercicio 3
df <- read.csv('/home/atencio/Escritorio/materias_dataset.csv', col.names = TRUE)
#ejercicio 3
df <- read.csv('/home/atencio/Escritorio/materias_dataset.csv', col.names = TRUE)
#ejercicio 3
df <- read.csv('/home/atencio/Escritorio/materias_dataset.csv')
df
#ejercicio 3
#df <- read_csv(file.choose(),skip = 0,col_names = TRUE)
df <- read.csv('/home/atencio/Escritorio/materias_dataset.csv')
df
#ejercicio 3
#df <- read_csv(file.choose(),skip = 0,col_names = TRUE)
data <- read.csv('/home/atencio/Escritorio/materias_dataset.csv')
df <- data.frame(mi.data)
#ejercicio 3
#df <- read_csv(file.choose(),skip = 0,col_names = TRUE)
mi.data <- read.csv('/home/atencio/Escritorio/materias_dataset.csv')
df <- data.frame(mi.data)
df
df
typeof(df)
typeof(mi.data)
df <- data.frame(mi.data)
typeof(df)
#ejercicio 3
#df <- read_csv(file.choose(),skip = 0,col_names = TRUE)
mi.data <- read.csv('/home/atencio/Escritorio/materias_dataset.csv')
typeof(mi.data)
df <- data.frame(mi.data)
typeof(df)
tusDatos <- read_csv(file.choose())
tusDatos <- read.csv(file.choose())
tusDatos
typeof(tusDatos)
View(mi.data)
install.packages('readr')
#ejercicio 3
#df <- read_csv(file.choose(),skip = 0,col_names = TRUE)
library('readr')
path <- file.choose()
path
df <- read_csv(path)
df
head(df)
typeof(df)
df
path <- file.choose()
path <- file.choose()
path
df <- read_csv(path)
df
View(df)
View(data)
View(mi.data)
View(tusDatos)
View(tusDatos)
names(df) <- c('EDAD', 'GENERO', 'MATERIAS')
df
#ejercicio  4
tempacid <- data.frame(water=stackloss$Water.Temp, acid=stackloss$Acid.Conc)
#ejercicio  4
tempacid <- data.frame(water=stackloss$Water.Temp, acid=stackloss$Acid.Conc)
tempacid
#Ejercicio 1 genere la secuencia
#A)
rep(1:3,4)
#B)
seq(from =10, to=10.5, length.out = 10)
#C)
rep(c('1','2','3', 'banana'),2)
#ejercicio 2
nombre <- c('Luis', 'Angel','Pablo','Ursula','Tatiana','Ariel')
dias <- c( 'Miercores','Lunes',  'Jueves', 'Viernes', 'Sabado','Martes')
h_semana <- c(3, 2.5 , 1 , 0.5, 5,2)
cronograma <- data.frame(nombre, dias, h_semana)
names(cronograma) <-c('Nombres', 'Dias','Horas a la semana')
cronograma
#ejercicio 3
#df <- read_csv(file.choose(),skip = 0,col_names = TRUE)
library('readr')
path <- file.choose()
path
df <- read_csv(path)
df
names(df) <- c('EDAD', 'GENERO', 'MATERIAS')
df
#ejercicio  4
tempacid <- data.frame(water=stackloss$Water.Temp, acid=stackloss$Acid.Conc)
tempacid
